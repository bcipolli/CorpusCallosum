function [in_pats, out_pats, pat_cls, pat_lbls, pat_idx] = r_pats_lewis_elman(sets)
%

    % From table in lewis & elman (2008)
    pats = [ 1 0 0 0 1   0 0 0 0 1      0 1 0 0 0   0 0 0 0 1
             0 1 0 0 0   0 1 1 1 0      0 0 1 0 0   0 1 1 1 0
             1 1 1 1 0   1 0 0 0 1      1 0 1 0 1   1 0 0 0 1
             1 0 0 0 1   0 1 0 1 1      1 0 1 0 1   0 1 0 1 1
             1 1 0 1 1   1 0 0 1 1      0 0 1 0 0   1 0 0 1 1
             1 1 1 1 0   1 0 1 1 0      0 1 0 0 0   1 0 1 1 0
             0 1 0 0 0   1 0 1 1 1      1 0 1 0 1   1 0 1 1 1
             1 1 1 1 0   1 1 0 0 1      0 0 0 0 0   1 1 0 0 1
             1 1 0 1 1   1 1 0 1 0      0 1 0 0 0   1 1 0 1 0
             1 0 0 0 1   0 1 0 0 0      0 0 1 0 0   0 1 0 0 0
             1 1 0 1 1   1 1 1 0 0      1 0 1 0 1   1 1 1 0 0
             0 1 0 0 0   1 1 1 0 1      0 1 0 0 0   1 1 1 0 1
             1 0 0 0 1   0 1 0 0 1      0 0 0 0 0   0 1 0 0 1
             0 1 0 0 0   1 1 1 1 1      0 0 0 0 0   1 1 1 1 1
             1 1 1 1 0   0 0 1 0 0      0 0 1 0 0   0 0 1 0 0
             1 1 0 1 1   0 0 1 1 0      0 0 0 0 0   0 0 1 1 0
             ...               
             0 0 0 1 0   0 0 0 0 0      0 0 0 1 0   0 0 0 0 0
             0 1 0 1 0   0 0 0 1 0      1 0 1 1 0   0 0 0 1 0
             0 0 0 0 0   0 0 0 1 1      1 0 0 0 1   0 0 0 1 1
             1 0 0 1 1   0 0 1 0 1      0 0 0 1 1   0 0 1 0 1
             0 1 1 0 1   0 0 1 1 1      1 1 0 1 0   0 0 1 1 1
             1 1 0 1 0   0 1 0 1 0      0 0 1 1 1   0 1 0 1 0
             0 0 0 0 1   0 1 1 0 0      0 1 0 1 0   0 1 1 0 0
             1 1 1 0 1   0 1 1 0 1      1 1 1 0 1   0 1 1 0 1
             0 1 1 0 0   0 1 1 1 1      1 0 0 1 1   0 1 1 1 1
             1 1 0 0 0   1 0 0 0 0      0 1 0 1 1   1 0 0 0 0
             1 0 1 1 1   1 0 0 1 0      1 0 0 0 0   1 0 0 1 0 
             1 0 0 0 0   1 0 1 0 0      1 1 1 0 0   1 0 1 0 0
             0 0 1 0 0   1 0 1 0 1      0 1 1 0 1   1 0 1 0 1
             0 0 1 1 0   1 1 0 0 0      0 0 1 0 1   1 1 0 0 0
             0 1 0 0 1   1 1 0 1 1      0 1 0 0 1   1 1 0 1 1
             1 0 1 0 1   1 1 1 1 0      1 1 0 0 1   1 1 1 1 0
            ];
%pats(end+1:end+size(pats,1),:) = 0;
%pats(33:64,1:5) = pats(1:32,6:10);
%pats(33:64,6:10) = pats(1:32,1:5); 
%pats(33:64,11:15) = pats(1:32,16:20);
%pats(33:64,16:20) = pats(1:32,11:15);
%    pats2 = pats;
    pats([8:16 24:32],:) = pats([8:16 24:32],[6:10 1:5 16:20 11:15]);

    pats(~pats) = -1; %
    in_pats = pats(:,[1:5 11:15]);
    out_pats = pats(:, [6:10 16:20]);
    
    pat_idx.inter = 1:size(pats,1)/2;
    pat_idx.intra = size(pats,1)/2+1:size(pats,1);

    % First half are interhemispheric, second half intrahemispheric
    pat_lbls                = cell(size(pats,1),1);
    pat_lbls(pat_idx.inter) = {'inter'};
    pat_lbls(pat_idx.intra) = {'intra'};
    
    [~,~,pat_cls] = unique(pat_lbls);
    pat_cls       = unique(pat_cls);
    
        
